x
## data frame can take different data types
y <- data.frame(y1 = as.factor(c("a", "b", "c")), y2 = c(0.1, 0.2, 0.3))
class(y$y1)
class(y$y2)
## as.matrix() converts both variables to character
z <- as.matrix(y)
z
## column sums
colSums(x)
## row means
rowMeans(x)
## column sums
apply(x, 2, sum)
## row means
apply(x, 1, mean)
## standard deviation for each row
apply(x, 1, sd)
## ------------------------------------------------------------------------
## create a list
x <- list(y1 = 1:10, y2 = c("hi", "hello", "hey"),
y3 = data.frame(z1 = 1:3, z2 = c("good", "bad", "ugly")))
## 3 ways of extracting elements from a list
x$y1 # first element
x[[2]] # second element
x[["y3"]] # third element
## ------------------------------------------------------------------------
names(x)  # names of all elements
length(x) # number of elements
dwnom80 <- cbind(congress$dwnom1[congress$congress == 80],
congress$dwnom2[congress$congress == 80])
dwnom112 <- cbind(congress$dwnom1[congress$congress == 112],
congress$dwnom2[congress$congress == 112])
## kmeans with 2 clusters
k80two.out <- kmeans(dwnom80, centers = 2, nstart = 5)
k112two.out <- kmeans(dwnom112, centers = 2, nstart = 5)
## elements of a list
names(k80two.out)
## final centroids
k80two.out$centers
k112two.out$centers
## number of observations for each cluster by party
table(party = congress$party[congress$congress == 80],
cluster = k80two.out$cluster)
table(party = congress$party[congress$congress == 112],
cluster = k112two.out$cluster)
## kmeans with 4 clusters
k80four.out <- kmeans(dwnom80, centers = 4, nstart = 5)
k112four.out <- kmeans(dwnom112, centers = 4, nstart = 5)
## plotting the results using the labels and limits defined earlier
plot(dwnom80, col = k80four.out$cluster + 1, xlab = xlab, ylab = ylab,
xlim = lim, ylim = lim, main = "80th Congress")
## plotting the centroids
points(k80four.out$centers, pch = 8, cex = 2)
## 112th congress
plot(dwnom112, col = k112four.out$cluster + 1, xlab = xlab, ylab = ylab,
xlim = lim, ylim = lim, main = "112th Congress")
points(k112four.out$centers, pch = 8, cex = 2)
palette()
afghan <- read.csv("afghan.csv")
setwd("/Users/karen/Desktop/MEASUREMENT")
afghan <- read.csv("afghan.csv")
## summarize variables of interest
summary(afghan$age)
summary(afghan$educ.years)
summary(afghan$employed)
summary(afghan$income)
prop.table(table(ISAF = afghan$violent.exp.ISAF,
Taliban = afghan$violent.exp.taliban))
## ------------------------------------------------------------------------
## print income data for first 10 respondents
head(afghan$income, n = 10)
## indicate whether respondents' income is missing
head(is.na(afghan$income), n = 10)
sum(is.na(afghan$income))  # count of missing values
mean(is.na(afghan$income)) # proportion missing
x <- c(1, 2, 3, NA)
mean(x)
mean(x, na.rm = TRUE)
prop.table(table(ISAF = afghan$violent.exp.ISAF,
Taliban = afghan$violent.exp.taliban, exclude = NULL))
afghan.sub <- na.omit(afghan)  # listwise deletion
nrow(afghan.sub)
length(na.omit(afghan$income))
## ------------------------------------------------------------------------
## a vector of proportions to plot
ISAF.ptable <- prop.table(table(ISAF = afghan$violent.exp.ISAF,
exclude = NULL))
ISAF.ptable
## make barplots by specifying a certain range for y-axis
barplot(ISAF.ptable,
names.arg = c("No harm", "Harm", "Nonresponse"),
main = "Civilian victimization by the ISAF",
xlab = "Response category",
ylab = "Proportion of the respondents", ylim = c(0, 0.7))
## repeat the same for the victimization by Taliban
Taliban.ptable <- prop.table(table(Taliban = afghan$violent.exp.taliban,
exclude = NULL))
barplot(Taliban.ptable,
names.arg = c("No harm", "Harm", "Nonresponse"),
main = "Civilian victimization by the Taliban",
xlab = "Response category",
ylab = "Proportion of the respondents", ylim = c(0, 0.7))
## ------------------------------------------------------------------------
hist(afghan$age, freq = FALSE, ylim = c(0, 0.04), xlab = "Age",
main = "Distribution of respondent's age")
## histogram of education.  use `breaks' to choose bins
hist(afghan$educ.years, freq = FALSE,
breaks = seq(from = -0.5, to = 18.5, by = 1),
xlab = "Years of education",
main = "Distribution of respondent's education")
## add a text label at (x, y) = (3, 0.5)
text(x = 3, y = 0.5, "median")
## add a vertical line representing median
abline(v = median(afghan$educ.years)) #ablineは線を引くという意味
## adding a vertical line representing median
lines(x = rep(median(afghan$educ.years), 2), y = c(0, 0.5)) #上と同じ意味
### Section 3.3.3: Box Plot
boxplot(educ.years ~ province, data = afghan,
main = "Education by province", ylab = "Years of education")
tapply(afghan$violent.exp.taliban, afghan$province, mean, na.rm = TRUE)
tapply(afghan$violent.exp.ISAF, afghan$province, mean, na.rm = TRUE)
## ---- eval = FALSE-------------------------------------------------------
## ## Saving or Printing a Graph
##
pdf(file = "educ.pdf", height = 5, width = 5)
boxplot(educ.years ~ province, data = afghan,
main = "Education by Province", ylab = "Years of education")
dev.off()　　#グラフを保存するpdfに
##
pdf(file = "hist.pdf", height = 4, width = 8)
## ## for simplicity omit the texts and lines from the earlier example
hist(afghan$age, freq = FALSE,
xlab = "Age", ylim = c(0, 0.04),
main = "Distribution of Respondent's Age")
hist(afghan$educ.years, freq = FALSE,
breaks = seq(from = -0.5, to = 18.5, by = 1),
xlab = "Years of education", xlim = c(0, 20),
main = "Distribution of Respondent's Education")
dev.off()
## ------------------------------------------------------------------------
## load village data
afghan.village <- read.csv("afghan-village.csv")
## boxplots for altitude
boxplot(altitude ~ village.surveyed, data = afghan.village,
ylab = "Altitude (meter)", names = c("Nonsampled", "Sampled"))
## boxplots for log population
boxplot(log(population) ~ village.surveyed, data = afghan.village,
ylab = "log population", names = c("Nonsampled", "Sampled"))
## ------------------------------------------------------------------------
tapply(is.na(afghan$violent.exp.taliban), afghan$province, mean)
tapply(is.na(afghan$violent.exp.ISAF), afghan$province, mean)
mean(afghan$list.response[afghan$list.group == "ISAF"]) -
mean(afghan$list.response[afghan$list.group == "control"])
table(response = afghan$list.response, group = afghan$list.group)
## ------------------------------------------------------------------------
congress <- read.csv("congress.csv")
## subset the data by party
rep <- subset(congress, subset = (party == "Republican"))
dem <- congress[congress$party == "Democrat", ] # another way to subset
## 80th and 112th congress
rep80 <- subset(rep, subset = (congress == 80))
dem80 <- subset(dem, subset = (congress == 80))
rep112 <- subset(rep, subset = (congress == 112))
dem112 <- subset(dem, subset = (congress == 112))
## preparing the labels and axis limits to avoid repetition
xlab <- "Economic liberalism/conservatism"
ylab <- "Racial liberalism/conservatism"
lim <- c(-1.5, 1.5)
## scatterplot for the 80th Congress
plot(dem80$dwnom1, dem80$dwnom2, pch = 16, col = "blue",
xlim = lim, ylim = lim, xlab = xlab, ylab = ylab,
main = "80th Congress") # democrats
points(rep80$dwnom1, rep80$dwnom2, pch = 17, col = "red") # republicans
text(-0.75, 1, "Democrats")
text(1, -1, "Republicans")
## scatterplot for the 112th Congress
plot(dem112$dwnom1, dem112$dwnom2, pch = 16, col = "blue",
xlim = lim, ylim = lim, xlab = xlab, ylab = ylab,
main = "112th Congress")
points(rep112$dwnom1, rep112$dwnom2, pch = 17, col = "red")
## party median for each congress
dem.median <- tapply(dem$dwnom1, dem$congress, median)
rep.median <- tapply(rep$dwnom1, rep$congress, median)
## Democrats
plot(names(dem.median), dem.median, col = "blue", type = "l",
xlim = c(80, 115), ylim = c(-1, 1), xlab = "Congress",
ylab = "DW-NOMINATE score (1st dimension)")
## add Republicans
lines(names(rep.median), rep.median, col = "red")
text(110, -0.6, "Democratic\n Party")
text(110, 0.85, "Republican\n Party")
## ------------------------------------------------------------------------
## Gini coefficient data
gini <- read.csv("USGini.csv")
## time-series plot for partisan difference
plot(seq(from = 1947.5, to = 2011.5, by = 2),
rep.median - dem.median, xlab = "Year",
ylab = "Republican median -\n Democratic median",
main = "Political polarization")
## time-series plot for Gini coefficient
plot(gini$year, gini$gini, ylim = c(0.35, 0.45), xlab = "Year",
ylab = "Gini coefficient", main = "Income inequality")
cor(gini$gini[seq(from = 2, to = nrow(gini), by = 2)],
rep.median - dem.median)
## ------------------------------------------------------------------------
hist(dem112$dwnom2, freq = FALSE, main = "Democrats",
xlim = c(-1.5, 1.5), ylim = c(0, 1.75),
xlab = "Racial liberalism/conservatism dimension")
hist(rep112$dwnom2, freq = FALSE, main = "Republicans",
xlim = c(-1.5, 1.5), ylim = c(0, 1.75),
xlab = "Racial liberalism/conservatism dimension")
qqplot(dem112$dwnom2, rep112$dwnom2, xlab = "Democrats",
ylab = "Republicans", xlim = c(-1.5, 1.5), ylim = c(-1.5, 1.5),
main = "Racial liberalism/conservatism dimension")
abline(0, 1) # 45 degree line
## ------------------------------------------------------------------------
## 3x4 matrix filled by row; first argument take actual entries
x <- matrix(1:12, nrow = 3, ncol = 4, byrow = TRUE)
rownames(x) <- c("a", "b", "c")
colnames(x) <- c("d", "e", "f", "g")
dim(x) # dimension
x
## data frame can take different data types
y <- data.frame(y1 = as.factor(c("a", "b", "c")), y2 = c(0.1, 0.2, 0.3))
class(y$y1)
class(y$y2)
## as.matrix() converts both variables to character
z <- as.matrix(y)
z
## column sums
colSums(x)
## row means
rowMeans(x)
## column sums
apply(x, 2, sum)
## row means
apply(x, 1, mean)
## standard deviation for each row
apply(x, 1, sd)
## ------------------------------------------------------------------------
## create a list
x <- list(y1 = 1:10, y2 = c("hi", "hello", "hey"),
y3 = data.frame(z1 = 1:3, z2 = c("good", "bad", "ugly")))
## 3 ways of extracting elements from a list
x$y1 # first element
x[[2]] # second element
x[["y3"]] # third element
## ------------------------------------------------------------------------
names(x)  # names of all elements
length(x) # number of elements
dwnom80 <- cbind(congress$dwnom1[congress$congress == 80],
congress$dwnom2[congress$congress == 80])
dwnom112 <- cbind(congress$dwnom1[congress$congress == 112],
congress$dwnom2[congress$congress == 112])
## kmeans with 2 clusters
k80two.out <- kmeans(dwnom80, centers = 2, nstart = 5)
k112two.out <- kmeans(dwnom112, centers = 2, nstart = 5)
## elements of a list
names(k80two.out)
## final centroids
k80two.out$centers
k112two.out$centers
## number of observations for each cluster by party
table(party = congress$party[congress$congress == 80],
cluster = k80two.out$cluster)
table(party = congress$party[congress$congress == 112],
cluster = k112two.out$cluster)
## kmeans with 4 clusters
k80four.out <- kmeans(dwnom80, centers = 4, nstart = 5)
k112four.out <- kmeans(dwnom112, centers = 4, nstart = 5)
## plotting the results using the labels and limits defined earlier
plot(dwnom80, col = k80four.out$cluster + 1, xlab = xlab, ylab = ylab,
xlim = lim, ylim = lim, main = "80th Congress")
## plotting the centroids
points(k80four.out$centers, pch = 8, cex = 2)
## 112th congress
plot(dwnom112, col = k112four.out$cluster + 1, xlab = xlab, ylab = ylab,
xlim = lim, ylim = lim, main = "112th Congress")
points(k112four.out$centers, pch = 8, cex = 2)
palette()
points(k80four.out$centers, pch = 8, cex = 2)
table(party = congress$party[congress$congress == 80],
cluster = k80two.out$cluster)
table(party = congress$party[congress$congress == 112],
cluster = k112two.out$cluster)
x <- list(y1 = 1:10, y2 = c("hi", "hello", "hey"),
y3 = data.frame(z1 = 1:3, z2 = c("good", "bad", "ugly")))
## 3 ways of extracting elements from a list
x$y1 # first element
x[[2]] # second element
x[["y3"]] # third element
x <- matrix(1:12, nrow = 3, ncol = 4, byrow = TRUE)
rownames(x) <- c("a", "b", "c")
colnames(x) <- c("d", "e", "f", "g")
dim(x) # dimension
x
hist(dem112$dwnom2, freq = FALSE, main = "Democrats",
xlim = c(-1.5, 1.5), ylim = c(0, 1.75),
xlab = "Racial liberalism/conservatism dimension")
hist(rep112$dwnom2, freq = FALSE, main = "Republicans",
xlim = c(-1.5, 1.5), ylim = c(0, 1.75),
xlab = "Racial liberalism/conservatism dimension")
qqplot(dem112$dwnom2, rep112$dwnom2, xlab = "Democrats",
ylab = "Republicans", xlim = c(-1.5, 1.5), ylim = c(-1.5, 1.5),
main = "Racial liberalism/conservatism dimension")
abline(0, 1) # 45 degree line
plot(dwnom80, col = k80four.out$cluster + 1, xlab = xlab, ylab = ylab,
xlim = lim, ylim = lim, main = "80th Congress")
plot(kanto.wage,kanto.rate)
plot(kanto.wage,kanto.rate)
plot(pref.wage,pref.rate)
pref.wage
plot(pref.wage,un.rate)
length(un.rate)
length(pref.rate)
length(pref.wage)
chugoku <- subset(hyou,subset=c(pref == "鳥取県"|pref =="岡山県"|pref =="広島県"|pref =="島根県"|pref =="山口県"))
un.wage <- cbind(kanto.wage,kyushu.wage,chubu.wage)
plot(un.wage,un.rate)
qqplot(kanto.wage,kanto.rate,xlab = "unemployment-rate",ylab = "minimum-wage",main = "最低賃金と失業率の相関性")
abline(0, 1000)
plot(un.wage,un.rate,col = c("red","pink","gray"))
plot(un.wage,un.rate,col = c("red","blue","green"))
plot(un.wage,un.rate,col = c("red","blue","green"))
legend("topright", legend=c("kanbto","kyushu", "chubu")
)
plot(un.wage,un.rate,col = c("red","blue","green"))
legend("topright", legend=c("kanbto","kyushu", "chubu"),col = c("red","blue","green"))
plot(un.wage,un.rate,col = c("red","blue","green"))
legend("topright", legend=c("kanbto","kyushu", "chubu"),col = c("red","blue","green"))
plot(un.wage,un.rate,col = c("red","blue","green"))
legend("topright", legend=c("kanbto","kyushu", "chubu"),col = c("red","blue","green"),pch=c(15,0), lwd=2, lty=1)
plot(un.wage,un.rate,col = c("red","blue","green"))
legend("topright", legend=c("kanbto","kyushu", "chubu"),col = c("red","blue","green"),pch=c(15,0), lty=1)
plot(un.wage,un.rate,col = c("red","blue","green"))
legend("topright", legend=c("kanbto","kyushu", "chubu"),col = c("red","blue","green"),pch=c(15,0))
un.wage
plot(un.wage,un.rate,col = c("royalblue3","red","green"))
legend("topright", legend=c("kanbto","kyushu", "chubu"),col = c("royalblue3","red","green"),pch=c(15,0))
kyushu$mini.wage
tapply(kyushu$mini.wage,kyushu$unemployed)
tapply(kyushu$mini.wage,kyushu$year)
tapply(kyushu$mini.wage,hyou$year)
tapply(kyushu$year,kyushu$mini.wage)
tapply(kyushu$year,kyushu$mini.wage)
tapply(kyushu$year,kyushu$mini.wage,mean)
tapply(kyushu$mini.wage,kyushu$year,mean)
tapply(kyushu$unemployment,kyushu$year,mean)
tapply(kyushu$unemployed,kyushu$year,mean)
tapply(kyushu.rate,kyushu$year,mean)
tapply(kyushu.rate,kyushu.wage,mean)
tapply(kyushu.rate,year,mean)
tapply(kyushu.rate,year,mean)
tapply(kanto.rate,year,mean)
tapply(chubu.rate,year,mean)
tapply(chubu.wage,year,mean)
tapply(chubu.wage,year,mean)
tapply(kanto.wage,year,mean)
tapply(kyushu.wage,year,mean)
tapply(chubu.wage,year,mean)
plot(un.wage,un.rate,col = c("royalblue3","red","green"))
legend("topright", legend=c("kanto","kyushu", "chubu"),col = c("royalblue3","red","green"),pch=c(15,0))
plot(un.wage,un.rate,col = c("royalblue3","red","green"))
legend("topright", legend=c("kanto","kyushu", "chubu"),col = c("royalblue3","red","green"),pch=c(15,0))
matplot(year,un.rate,type = "l",col=c("royalblue3","red","green"),xlab="years",ylab="unemployment-rate",xlim=c(1997,2018),xaxp=c(1997,2018,21))
legend("topright", legend=c("kanto", "kyushu","chubu"),col=c("royalblue3","red","green"), pch=c(15,0), lwd=2, lty=1)
plot(un.wage,un.rate,col = c("royalblue3","red","green"))
legend("topright", legend=c("kanto","kyushu", "chubu"),col = c("royalblue3","red","green"),pch=c(15,0))
tapply(chubu.wage,year,mean)
tapply(kyushu.wage,year,mean)
tapply(kyushu.wage,year,mean)
tapply(chubu.wage,year,mean)
matplot(un.wage,un.rate,col = c("royalblue3","red","green"))
legend("topright", legend=c("kanto","kyushu", "chubu"),col = c("royalblue3","red","green"),pch=c(15,0))
matplot(un.wage,un.rate,col = c("royalblue3","red","green"),type="l")
legend("topright", legend=c("kanto","kyushu", "chubu"),col = c("royalblue3","red","green"),pch=c(15,0))
plot(un.wage,un.rate,col = c("royalblue3","red","green"))
legend("topright", legend=c("kanto","kyushu", "chubu"),col = c("royalblue3","red","green"),pch=c(15,0))
matplot(un.wage,un.rate,col = c("royalblue3","red","green"),type="l")
legend("topright", legend=c("kanto","kyushu", "chubu"),col = c("royalblue3","red","green"),pch=c(15,0))
matplot(un.wage,un.rate,col = c("royalblue3","red","green"),type="l")
legend("topright", legend=c("kanto","kyushu", "chubu"),col = c("royalblue3","red","green"),pch=c(15,0))
matplot(un.rate,un.wage,col = c("royalblue3","red","green"),type="l")
legend("topright", legend=c("kanto","kyushu", "chubu"),col = c("royalblue3","red","green"),pch=c(15,0))
tapply(kanto.wage,year,mean)
un.kanto<- tapply(kanto.wage,year,mean)
un.kanto<- tapply(chubu.wage,year,mean)
un.kanto<- tapply(kyushu.wage,year,mean)
un.kanto<- tapply(kanto.wage,year,mean)
un.chubu<- tapply(chubu.wage,year,mean)
un.ksyuhu<- tapply(kyushu.wage,year,mean)
un <- c(un.kanto,un.chubu,un.kyushu)
un.kyushu<- tapply(kyushu.wage,year,mean)
un <- c(un.kanto,un.chubu,un.kyushu)
un
table(un)
kanto.rate<- tapply(kanto$unemployed, kanto$year, mean) / tapply(kanto$force.pop, kanto$year, mean) *100
kyushu.rate<- tpply(kyushu$unemployed, kyushu$year, mean) / tapply(kyushu$force.pop, kyushu$year, mean) *100
chubu.rate<- tapply(chubu$unemployed, chubu$year, mean) / tapply(chubu$force.pop, chubu$year, mean) *100
un.rate <- cbind(kanto.rate,kyushu.rate,chubu.rate)
un.rate
kanto.rate<- tapply(kanto$unemployed, kanto$year, mean) / tapply(kanto$force.pop, kanto$year, mean) *100
kyushu.rate<- tapply(kyushu$unemployed, kyushu$year, mean) / tapply(kyushu$force.pop, kyushu$year, mean) *100
chubu.rate<- tapply(chubu$unemployed, chubu$year, mean) / tapply(chubu$force.pop, chubu$year, mean) *100
un.rate <- cbind(kanto.rate,kyushu.rate,chubu.rate)
un.rate
matplot(year,un.rate,type = "l",col=c("royalblue3","red","green"),xlab="years",ylab="unemployment-rate",xlim=c(1997,2018),xaxp=c(1997,2018,21))
legend("topright", legend=c("kanto", "kyushu","chubu"),col=c("royalblue3","red","green"), pch=c(15,0), lwd=2, lty=1)
matplot(un.wage,un.rate,col = c("royalblue3","red","green"),type="l")
legend("topright", legend=c("kanto","kyushu", "chubu"),col = c("royalblue3","red","green"),pch=c(15,0))
matplot(year,un.rate,type = "l",col=c("royalblue3","red","green"),xlab="years",ylab="unemployment-rate",xlim=c(1997,2018),xaxp=c(1997,2018,21))
legend("topright", legend=c("kanto", "kyushu","chubu"),col=c("royalblue3","red","green"), pch=c(15,0), lwd=2, lty=1)
plot(un.wage,un.rate,col = c("royalblue3","red","green"),type="l")
legend("topright", legend=c("kanto","kyushu", "chubu"),col = c("royalblue3","red","green"),pch=c(15,0))
matplot(year,un.rate,type = "l",col=c("royalblue3","red","green"),xlab="years",ylab="unemployment-rate",xlim=c(1997,2018),xaxp=c(1997,2018,21))
legend("topright", legend=c("kanto", "kyushu","chubu"),col=c("royalblue3","red","green"), pch=c(15,0), lwd=2, lty=1)
matplot(un.wage,un.rate,col = c("royalblue3","red","green"),type="l")
legend("topright", legend=c("kanto","kyushu", "chubu"),col = c("royalblue3","red","green"),pch=c(15,0))
matplot(un.rate,un.wage,col = c("royalblue3","red","green"),type="l")
legend("topright", legend=c("kanto","kyushu", "chubu"),col = c("royalblue3","red","green"),pch=c(15,0))
getwd()
setwd("/Users/karen/Desktop/計量政治分析")
hyou <- read.csv("keiryo2.csv")
hokkaido<- subset(hyou,subset=(pref == "北海道"))
tohoku<- subset(hyou,subset=c(pref == "青森県"|pref == "秋田県"|pref =="岩手県"|pref =="山形県"|pref =="宮城県"|pref =="福島県"))
kanto <- subset(hyou,subset=c(pref == "茨城県"|pref == "栃木県"|pref =="群馬県"|pref =="埼玉県"|pref =="千葉県"|pref =="神奈川県"|pref =="東京都"))
tokyo<- subset(hyou,subset=(pref == "東京都"))
chubu <- subset(hyou,subset=c(pref == "新潟県"|pref == "富山県"|pref =="石川県"|pref =="福井県"|pref =="山梨県"|pref =="静岡県"|pref =="長野県"|pref=="愛知県"|pref=="岐阜県"))
kinki <- subset(hyou,subset=c(pref == "滋賀県"|pref == "三重県"|pref =="京都府"|pref =="大阪府"|pref =="奈良県"|pref =="和歌山県"|pref =="兵庫県"))
chugoku <- subset(hyou,subset=c(pref == "鳥取県"|pref =="岡山県"|pref =="広島県"|pref =="島根県"|pref =="山口県"))
shikoku <- subset(hyou,subset=c(pref == "香川県"|pref =="徳島県"|pref =="愛媛県"|pref =="高知県"))
kyushu <- subset(hyou,subset=c(pref == "福岡県"|pref =="佐賀県"|pref =="大分県"|pref =="長崎県"|pref =="熊本県"|pref =="宮崎県"|pref =="鹿児島県"|pref =="沖縄県"))
1.
tohoku.wage <- tapply(tohoku$mini.wage, tohoku$year, mean)
kanto.wage <- tapply(kanto$mini.wage, kanto$year, mean)
tokyo.wage <- tapply(tokyo$mini.wage, tokyo$year, mean)
chubu.wage <- tapply(chubu$mini.wage, chubu$year, mean)
hokkaido.wage <- tapply(hokkaido$mini.wage, hokkaido$year, mean)
kinki.wage <- tapply(kinki$mini.wage, kinki$year, mean)
chugoku.wage <- tapply(chugoku$mini.wage, chugoku$year, mean)
shikoku.wage <- tapply(shikoku$mini.wage, shikoku$year, mean)
kyushu.wage <- tapply(kyushu$mini.wage, kyushu$year, mean)
pref.wage <- cbind(tohoku.wage,kanto.wage,tokyo.wage,chubu.wage,hokkaido.wage,kinki.wage,chugoku.wage,shikoku.wage,kyushu.wage)
year <- unique(hyou$year)
matplot(year,pref.wage,type="l",col = c("red","pink","gray","green","yellow","orange","blue","purple","black"),xlab="years",ylab="minimum wage",xaxp=c(1997,2018,21))
legend("topleft", legend=c("tohoku","kanto", "tokyo" ,"chubu","hokkaido","kinki","chugoku","shikoku","kyushu"),col=c("red","pink","gray","green","yellow","orange","blue","purple","black"), pch=c(15,0), lwd=2, lty=1)
un.wage <- cbind(kanto.wage,kyushu.wage,chubu.wage)
2.#失業率を出す
kanto.rate<- tapply(kanto$unemployed, kanto$year, mean) / tapply(kanto$force.pop, kanto$year, mean) *100
kyushu.rate<- tapply(kyushu$unemployed, kyushu$year, mean) / tapply(kyushu$force.pop, kyushu$year, mean) *100
chubu.rate<- tapply(chubu$unemployed, chubu$year, mean) / tapply(chubu$force.pop, chubu$year, mean) *100
un.rate <- cbind(kanto.rate,kyushu.rate,chubu.rate)
un.rate
#plot(year,kanto.rate,type = "b",xlab="years",ylab="unemployment-rate",xlim=c(1997,2018),ylim = c(2.0,6.0),xaxp=c(1997,2018,21))
#plot(year,kyushu.rate,type = "b",xlab="years",ylab="unemployment-rate",xlim=c(1997,2018),ylim = c(2.0,6.0),xaxp=c(1997,2018,21))
#plot(year,chubu.rate,type = "b",xlab="years",ylab="unemployment-rate",xlim=c(1997,2018),ylim = c(2.0,6.0),xaxp=c(1997,2018,21))
3.失業率と最低賃金の相関性
matplot(year,un.rate,type = "l",col=c("royalblue3","red","green"),xlab="years",ylab="unemployment-rate",xlim=c(1997,2018),xaxp=c(1997,2018,21))
legend("topright", legend=c("kanto", "kyushu","chubu"),col=c("royalblue3","red","green"), pch=c(15,0), lwd=2, lty=1)
matplot(un.wage,un.rate,col = c("royalblue3","red","green"),type="l")
legend("topright", legend=c("kanto","kyushu", "chubu"),col = c("royalblue3","red","green"),pch=c(15,0))
matplot(un.rate,un.wage,col = c("royalblue3","red","green"),type="l")
legend("topright", legend=c("kanto","kyushu", "chubu"),col = c("royalblue3","red","green"),pch=c(15,0))
getwd()
setwd("/Users/karen/Desktop/計量政治分析")
hyou <- read.csv("keiryo2.csv")
hokkaido<- subset(hyou,subset=(pref == "北海道"))
tohoku<- subset(hyou,subset=c(pref == "青森県"|pref == "秋田県"|pref =="岩手県"|pref =="山形県"|pref =="宮城県"|pref =="福島県"))
kanto <- subset(hyou,subset=c(pref == "茨城県"|pref == "栃木県"|pref =="群馬県"|pref =="埼玉県"|pref =="千葉県"|pref =="神奈川県"|pref =="東京都"))
tokyo<- subset(hyou,subset=(pref == "東京都"))
chubu <- subset(hyou,subset=c(pref == "新潟県"|pref == "富山県"|pref =="石川県"|pref =="福井県"|pref =="山梨県"|pref =="静岡県"|pref =="長野県"|pref=="愛知県"|pref=="岐阜県"))
kinki <- subset(hyou,subset=c(pref == "滋賀県"|pref == "三重県"|pref =="京都府"|pref =="大阪府"|pref =="奈良県"|pref =="和歌山県"|pref =="兵庫県"))
chugoku <- subset(hyou,subset=c(pref == "鳥取県"|pref =="岡山県"|pref =="広島県"|pref =="島根県"|pref =="山口県"))
shikoku <- subset(hyou,subset=c(pref == "香川県"|pref =="徳島県"|pref =="愛媛県"|pref =="高知県"))
kyushu <- subset(hyou,subset=c(pref == "福岡県"|pref =="佐賀県"|pref =="大分県"|pref =="長崎県"|pref =="熊本県"|pref =="宮崎県"|pref =="鹿児島県"|pref =="沖縄県"))
1.
tohoku.wage <- tapply(tohoku$mini.wage, tohoku$year, mean)
kanto.wage <- tapply(kanto$mini.wage, kanto$year, mean)
tokyo.wage <- tapply(tokyo$mini.wage, tokyo$year, mean)
chubu.wage <- tapply(chubu$mini.wage, chubu$year, mean)
hokkaido.wage <- tapply(hokkaido$mini.wage, hokkaido$year, mean)
kinki.wage <- tapply(kinki$mini.wage, kinki$year, mean)
chugoku.wage <- tapply(chugoku$mini.wage, chugoku$year, mean)
shikoku.wage <- tapply(shikoku$mini.wage, shikoku$year, mean)
kyushu.wage <- tapply(kyushu$mini.wage, kyushu$year, mean)
pref.wage <- cbind(tohoku.wage,kanto.wage,tokyo.wage,chubu.wage,hokkaido.wage,kinki.wage,chugoku.wage,shikoku.wage,kyushu.wage)
year <- unique(hyou$year)
matplot(year,pref.wage,type="l",col = c("red","pink","gray","green","yellow","orange","blue","purple","black"),xlab="years",ylab="minimum wage",xaxp=c(1997,2018,21))
legend("topleft", legend=c("tohoku","kanto", "tokyo" ,"chubu","hokkaido","kinki","chugoku","shikoku","kyushu"),col=c("red","pink","gray","green","yellow","orange","blue","purple","black"), pch=c(15,0), lwd=2, lty=1)
un.wage <- cbind(kanto.wage,kyushu.wage,chubu.wage)
2.#失業率を出す
kanto.rate<- tapply(kanto$unemployed, kanto$year, mean) / tapply(kanto$force.pop, kanto$year, mean) *100
kyushu.rate<- tapply(kyushu$unemployed, kyushu$year, mean) / tapply(kyushu$force.pop, kyushu$year, mean) *100
chubu.rate<- tapply(chubu$unemployed, chubu$year, mean) / tapply(chubu$force.pop, chubu$year, mean) *100
un.rate <- cbind(kanto.rate,kyushu.rate,chubu.rate)
un.rate
#plot(year,kanto.rate,type = "b",xlab="years",ylab="unemployment-rate",xlim=c(1997,2018),ylim = c(2.0,6.0),xaxp=c(1997,2018,21))
#plot(year,kyushu.rate,type = "b",xlab="years",ylab="unemployment-rate",xlim=c(1997,2018),ylim = c(2.0,6.0),xaxp=c(1997,2018,21))
#plot(year,chubu.rate,type = "b",xlab="years",ylab="unemployment-rate",xlim=c(1997,2018),ylim = c(2.0,6.0),xaxp=c(1997,2018,21))
3.#失業率と最低賃金の相関性
matplot(year,un.rate,type = "l",col=c("royalblue3","red","green"),xlab="years",ylab="unemployment-rate",xlim=c(1997,2018),xaxp=c(1997,2018,21))
legend("topright", legend=c("kanto", "kyushu","chubu"),col=c("royalblue3","red","green"), pch=c(15,0), lwd=2, lty=1)
matplot(un.wage,un.rate,col = c("royalblue3","red","green"),type="l")
legend("topright", legend=c("kanto","kyushu", "chubu"),col = c("royalblue3","red","green"),pch=c(15,0))
matplot(un.rate,un.wage,col = c("royalblue3","red","green"),type="l")
legend("topright", legend=c("kanto","kyushu", "chubu"),col = c("royalblue3","red","green"),pch=c(15,0))
tapply(un.rate,un.wage,mean)
tohoku
tohoku$unemployed
tapply(tohoku$unemployed,year,mean)
tapply(tohoku$unemployed,tohoku$year,mean)
